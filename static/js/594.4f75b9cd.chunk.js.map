{"version":3,"file":"static/js/594.4f75b9cd.chunk.js","mappings":"wRAEAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,sCAC+CF,GAD/C,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACCJ,EADD,iBAC0BI,EAD1B,oBAC8CN,GAD9C,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gFACCJ,EADD,iBAC0BI,EAD1B,4BACsDN,GADtD,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,gFACCJ,EADD,iBAC0BI,EAD1B,4BACsDN,GADtD,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACCR,EADD,gCACyCF,EADzC,kBAC0DU,GAD1D,SAEkBX,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,KAAKO,SAHhB,kE,8JC1BMC,EAAeC,EAAAA,GAAAA,IAAH,8HASZC,EAAcD,EAAAA,GAAAA,GAAH,gDAIXE,EAAWF,EAAAA,GAAAA,EAAH,sC,SCyBrB,EAnCgB,WACd,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,gHAEEf,EAAAA,EAAAA,IAAWS,GAFb,OAEdO,EAFc,OAGdC,EAAaD,EAAQZ,QAC3BS,EAAeI,GAJK,gDAMpBC,QAAQC,IAAR,MANoB,yDAAH,qDASrBJ,GACD,GAAE,CAACN,KAGF,SAACJ,EAAD,UAC0B,IAAvBO,EAAYQ,OACXR,EAAYS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASd,EAAS,EAATA,GAClC,OACE,4BACE,SAACF,EAAD,4BAAyBe,MACzB,SAACd,EAAD,UAAWe,MAFHd,EAKb,KAED,sEAIP,C","sources":["Servis/Api.js","components/Reviews/Reviews.style.js","components/Reviews/Revievs.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '68dd2d07f1b8d9799366e4d9411e689b';\n\nexport async function getTrendingMovies() {\n  const searchParams = `/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\n\nexport async function getMoviesInfo(movie_id) {\n  const searchParams = `/movie/${movie_id}?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\nexport async function getRewiews(movie_id) {\n  const searchParams = `/movie/${movie_id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\n\nexport async function getCast(movie_id) {\n  const searchParams = `/movie/${movie_id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\n\nexport async function getSubmit(query) {\n  const searchParams = `/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(searchParams);\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const RevievsBlock = styled.div`\n  background-color: #efebe9;\n  height: 100vh;\n  padding: 10px;\n  & div {\n    padding: 10px;\n  }\n`;\n\nexport const RevievsName = styled.h4`\n  margin-bottom: 10px;\n`;\n\nexport const CastText = styled.p`\n  margin: 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRewiews } from 'Servis/Api';\nimport { RevievsBlock, RevievsName, CastText } from './Reviews.style';\n\nconst Revievs = () => {\n  const { id } = useParams();\n  const [infoReviews, setinfoReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviewsMovie = async () => {\n      try {\n        const reviews = await getRewiews(id);\n        const revievsArr = reviews.results;\n        setinfoReviews(revievsArr);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getReviewsMovie();\n  }, [id]);\n\n  return (\n    <RevievsBlock>\n      {infoReviews.length !== 0 ? (\n        infoReviews.map(({ author, content, id }) => {\n          return (\n            <div key={id}>\n              <RevievsName>{`Author: ${author}`}</RevievsName>\n              <CastText>{content}</CastText>\n            </div>\n          );\n        })\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </RevievsBlock>\n  );\n};\n\nexport default Revievs;\n"],"names":["axios","API_KEY","getTrendingMovies","searchParams","response","data","getMoviesInfo","movie_id","getRewiews","getCast","getSubmit","query","results","RevievsBlock","styled","RevievsName","CastText","id","useParams","useState","infoReviews","setinfoReviews","useEffect","getReviewsMovie","reviews","revievsArr","console","log","length","map","author","content"],"sourceRoot":""}