{"version":3,"file":"static/js/173.63640c02.chunk.js","mappings":"sRAEAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,sCAC+CF,GAD/C,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACCJ,EADD,iBAC0BI,EAD1B,oBAC8CN,GAD9C,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gFACCJ,EADD,iBAC0BI,EAD1B,4BACsDN,GADtD,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,gFACCJ,EADD,iBAC0BI,EAD1B,4BACsDN,GADtD,SAEkBD,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACCR,EADD,gCACyCF,EADzC,kBAC0DU,GAD1D,SAEkBX,EAAAA,GAAAA,IAAUG,GAF5B,cAECC,EAFD,yBAGEA,EAASC,KAAKO,SAHhB,kE,0LC1BMC,EAAmBC,EAAAA,GAAAA,OAAH,yVAmBhBC,EAAoBD,EAAAA,GAAAA,IAAH,iEAKjBE,EAAuBF,EAAAA,GAAAA,IAAH,0FAMpBG,EAAkBH,EAAAA,GAAAA,IAAH,yDAKfI,EAAmBJ,EAAAA,GAAAA,IAAH,0CAIhBK,EAA6BL,EAAAA,GAAAA,IAAH,6JAU1BM,EAAuBN,EAAAA,GAAAA,KAAH,sNAapBO,EAAuBP,EAAAA,GAAAA,KAAH,yF,SCuBjC,EAvEqB,WACnB,IAAQQ,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAITC,EACNJ,EADMI,YAAaC,EACnBL,EADmBK,MAAOC,EAC1BN,EAD0BM,aAAcC,EACxCP,EADwCO,SAAUC,EAClDR,EADkDQ,OAAQC,EAC1DT,EAD0DS,aAY5D,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMV,EAAS,mCAAG,8GAEMnB,EAAAA,EAAAA,IAAcgB,GAFpB,OAERc,EAFQ,OAGdV,EAAaU,GAHC,uGAAH,qDAMfX,GACD,GAAE,CAACH,KAEF,iCACE,SAAC,KAAD,CAAMe,QAjBW,kBAAMV,GAAU,EAAhB,EAiBjB,UACE,UAACd,EAAD,YACE,SAAC,MAAD,IADF,iBAIF,UAACE,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEqB,IACET,EAAW,0CAC4BA,GACnC,sCAENU,IAAG,UAAKT,EAAL,gBAGP,UAACZ,EAAD,YACE,oCAAQY,EAAR,aAAkBC,EAAlB,aACA,wCAAgBS,KAAKC,MAAOP,EAAe,GAAM,KAAjD,QACA,sCACA,uBAAIF,KACJ,oCACA,uBACGC,EACGA,EAAOS,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,KAAP,OAAkB,0BAAgBA,GAALrB,EAA7B,IACX,SAGR,sBAEF,mBACA,oDACA,UAACH,EAAD,YACE,UAACE,EAAD,YACE,SAACD,EAAD,KACA,SAAC,KAAD,CAAMwB,GAAG,OAAT,sBAEF,UAACvB,EAAD,YACE,SAACD,EAAD,KACA,SAAC,KAAD,CAAMwB,GAAG,UAAT,4BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,4CACpB,mBACA,SAAC,KAAD,MAGL,C","sources":["Servis/Api.js","components/MovieDetails/MovieDetails.style.js","components/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '68dd2d07f1b8d9799366e4d9411e689b';\n\nexport async function getTrendingMovies() {\n  const searchParams = `/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\n\nexport async function getMoviesInfo(movie_id) {\n  const searchParams = `/movie/${movie_id}?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\nexport async function getRewiews(movie_id) {\n  const searchParams = `/movie/${movie_id}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\n\nexport async function getCast(movie_id) {\n  const searchParams = `/movie/${movie_id}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(searchParams);\n  return response.data;\n}\n\nexport async function getSubmit(query) {\n  const searchParams = `/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(searchParams);\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const MovieDetailsBack = styled.button`\n  display: inline-block;\n  display: flex;\n  text-align: center;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  padding: 5px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-weight: bold;\n  text-decoration: none;\n  &:hover {\n    background-color: red;\n    color: white;\n  }\n`;\n\nexport const MovieDetailsBlock = styled.div`\n  display: flex;\n  margin-bottom: 5px;\n`;\n\nexport const MovieDetailsImgBlock = styled.div`\n  min-width: 300px;\n  min-height: 400px;\n  margin-right: 20px;\n`;\n\nexport const MovieDetailsImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MovieDetailsInfo = styled.div`\n  padding: 10px;\n`;\n\nexport const MovieDetailsInfoAdditional = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n  & a {\n    color: blue;\n    text-decoration: underline;\n  }\n`;\n\nexport const MovieDetailsInfoSpan = styled.span`\n  display: flex;\n  align-items: center;\n  width: 5px;\n  height: 5px;\n  border: 1px solid #000;\n  background-color: red;\n  margin-right: 5px;\n\n  border-radius: 50%;\n  border: none;\n`;\n\nexport const MovieDetailsInfoList = styled.span`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { getMoviesInfo } from 'Servis/Api';\nimport { AiFillBackward } from 'react-icons/ai';\nimport {\n  MovieDetailsBlock,\n  MovieDetailsImgBlock,\n  MovieDetailsImg,\n  MovieDetailsBack,\n  MovieDetailsInfo,\n  MovieDetailsInfoAdditional,\n  MovieDetailsInfoSpan,\n  MovieDetailsInfoList,\n} from './MovieDetails.style';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n\n  const [movieInfo, setMovieInfo] = useState('');\n  const navigate = useNavigate();\n  const backLinkHref = () => navigate(-1);\n  // const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/';\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    movieInfo;\n\n  useEffect(() => {\n    const movieInfo = async () => {\n      try {\n        const movie = await getMoviesInfo(id);\n        setMovieInfo(movie);\n      } catch (error) {}\n    };\n    movieInfo();\n  }, [id]);\n  return (\n    <>\n      <Link onClick={backLinkHref}>\n        <MovieDetailsBack>\n          <AiFillBackward /> Go Back\n        </MovieDetailsBack>\n      </Link>\n      <MovieDetailsBlock>\n        <MovieDetailsImgBlock>\n          <MovieDetailsImg\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : 'https://via.placeholder.com/300x400'\n            }\n            alt={`${title} poster`}\n          />\n        </MovieDetailsImgBlock>\n        <MovieDetailsInfo>\n          <h2>{`${title} (${release_date})`} </h2>\n          <p>User score: {Math.floor((vote_average / 10) * 100)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {genres\n              ? genres.map(({ id, name }) => <span key={id}>{name}</span>)\n              : ''}\n          </p>\n        </MovieDetailsInfo>\n        <hr />\n      </MovieDetailsBlock>\n      <hr />\n      <h3>Additional informstion</h3>\n      <MovieDetailsInfoAdditional>\n        <MovieDetailsInfoList>\n          <MovieDetailsInfoSpan></MovieDetailsInfoSpan>\n          <Link to=\"cast\">Cast</Link>\n        </MovieDetailsInfoList>\n        <MovieDetailsInfoList>\n          <MovieDetailsInfoSpan></MovieDetailsInfoSpan>\n          <Link to=\"reviews\">Reviews</Link>\n        </MovieDetailsInfoList>\n      </MovieDetailsInfoAdditional>\n      <Suspense fallback={<div>Loading ...</div>}></Suspense>\n      <hr />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendingMovies","searchParams","response","data","getMoviesInfo","movie_id","getRewiews","getCast","getSubmit","query","results","MovieDetailsBack","styled","MovieDetailsBlock","MovieDetailsImgBlock","MovieDetailsImg","MovieDetailsInfo","MovieDetailsInfoAdditional","MovieDetailsInfoSpan","MovieDetailsInfoList","id","useParams","useState","movieInfo","setMovieInfo","navigate","useNavigate","poster_path","title","release_date","overview","genres","vote_average","useEffect","movie","onClick","src","alt","Math","floor","map","name","to","Suspense","fallback"],"sourceRoot":""}